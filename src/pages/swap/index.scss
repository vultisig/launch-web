@use "~variables" as *;
@use "sass:math";

.swap-page {
  display: flex;
  flex-direction: column;
  gap: rem(16);

  .stats {
    display: flex;
    flex-wrap: wrap;
    gap: rem(12);

    .title {
      align-items: center;
      color: $neutral-300;
      display: flex;
      font-size: rem(12);
      font-weight: 500;

      svg {
        height: rem(16);
        width: rem(16);
      }
    }

    .value {
      font-size: rem(18);
      font-weight: 700;
    }

    .item {
      background-color: $background-secondary;
      border-radius: rem(12);
      display: flex;
      flex-direction: column;
      gap: rem(8);
      padding: rem(12);
      width: calc(100% / 2 - rem(math.div(12 * 1, 2)));

      &:first-child {
        width: 100%;
      }
    }

    .ascending {
      .title {
        svg {
          stroke: $button-primary;
        }

        span {
          color: $button-primary;
        }
      }
    }

    .descending {
      .title {
        svg {
          stroke: $alert-error;
        }

        span {
          color: $alert-error;
        }
      }
    }
  }

  .vultswap {
    background-color: $background-secondary;
    border-radius: rem(20);
    display: flex;
    flex-direction: column;
    gap: rem(16);
    padding: rem(16);

    .ant-btn {
      height: rem(48);
    }

    .heading {
      display: block;
      font-size: rem(28);
      font-weight: 500;
      text-align: center;
    }

    .chain {
      align-items: center;
      display: flex;
      justify-content: space-between;
    }

    .swap {
      align-items: center;
      display: flex;
      flex-direction: column;

      .item {
        border: solid rem(1) $border-normal;
        border-radius: rem(12);
        display: flex;
        flex-direction: column;
        padding: rem(16);
        width: 100%;

        .ant-input-number-input {
          height: rem(40);
          padding: 0;
        }

        .ant-input-number {
          background-color: transparent;
          border: none;
          box-shadow: none;
          color: $text-light;
          font-size: rem(22);
          font-weight: 500;
          outline: none;
          width: 100%;
        }

        .title {
          font-size: rem(12);
          font-weight: 500;
        }

        .balance {
          display: flex;
          justify-content: space-between;
          gap: rem(8);
        }

        .price {
          color: $text-extra-light;
        }
      }

      .switch {
        align-items: center;
        background-color: $button-secondary;
        border: solid rem(1) $border-normal;
        border-radius: rem(12);
        cursor: pointer;
        display: flex;
        height: rem(36);
        justify-content: center;
        margin: rem(-14) 0;
        width: rem(36);
        z-index: 1;

        svg {
          height: rem(20);
          width: rem(20);
        }
      }
    }

    .reversed {
      flex-direction: column-reverse;
    }
  }

  .reports {
    .heading {
      align-items: center;
      display: flex;
      justify-content: space-between;
      margin-bottom: rem(8);

      .title {
        font-size: rem(16);
        font-weight: 600;
      }

      .period {
        background-color: $background-secondary;
        border-radius: rem(6);
        display: flex;
        gap: rem(4);
        padding: rem(4);

        li {
          border-radius: rem(6);
          cursor: pointer;
          font-weight: 600;
          font-size: rem(13);
          height: rem(26);
          line-height: rem(26);
          text-align: center;
          transition: all 0.2s;
          width: rem(56);

          &:hover {
            background-color: $background-tertiary;
          }

          &.active {
            background-color: $background-tertiary;
            color: $button-primary;
          }
        }
      }
    }
  }

  .aside {
    width: rem(400);
  }

  .main {
    display: flex;
    flex: 1;
    flex-direction: column;
    gap: rem(16);
  }
}

@media (min-width: rem(768)) {
  .dashboard-page {
    .stats {
      .item {
        width: calc(100% / 3 - rem(math.div(12 * 2, 3)));

        &:nth-child(1),
        &:nth-child(2) {
          width: calc(100% / 2 - rem(math.div(12 * 1, 2)));
        }
      }
    }
  }
}

@media (min-width: rem(1400)) {
  .swap-page {
    flex-direction: row-reverse;
    max-width: rem(1400) !important;

    .stats {
      .item {
        width: calc(100% / 5 - rem(math.div(12 * 4, 5))) !important;
      }
    }
  }
}
